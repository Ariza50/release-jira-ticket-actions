import {WebClient} from '@slack/web-api';
import {GH_REPOSITORY, RELEASE_PREFIX, SLACK_CHANNEL, SLACK_ENVIRONMENT, SLACK_TOKEN} from './env'

export const sendNewReleaseMessage = async (version: string) => {
  try {
    const web = new WebClient(SLACK_TOKEN);

    const message = buildSlackVersionMessage(version, SLACK_ENVIRONMENT);

    await web.chat.postMessage({
      token: SLACK_TOKEN,
      channel: SLACK_CHANNEL,
      link_names: true,
      text: "${GH_REPOSITORY} | RELEASED VERSION",
      blocks: message
    });
  }
  catch (error) {
    console.error(error);
  }
}

const buildSlackVersionMessage = (version: string, environment: string) => {
  const blocks = []

  blocks.push({
    "type": "section",
    "text": {
      "type": "mrkdwn",
      "text": `*${RELEASE_PREFIX} | Release* version \`${version}\` has been released to \`${environment}\``
    }
  })

  blocks.push(buildDivider())
  blocks.push(buildFooter())

  return blocks;

}

const buildDivider = () => {
  return (
    {
      "type": "divider"
    }
  )
}

const buildFooter = () => {
  return (
    {
      "type": "context",
      "elements": [
        {
          "type": "mrkdwn",
          "text": "This notification is autogenerated by gh action jira-ticket-actions."
        }
      ]
    }
  )
}
