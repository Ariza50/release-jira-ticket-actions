"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendNewReleaseMessage = void 0;
const web_api_1 = require("@slack/web-api");
const env_1 = require("./env");
const sendNewReleaseMessage = async (version) => {
    try {
        const web = new web_api_1.WebClient(env_1.SLACK_TOKEN);
        const message = buildSlackVersionMessage(version, env_1.SLACK_ENVIRONMENT);
        await web.chat.postMessage({
            token: env_1.SLACK_TOKEN,
            channel: env_1.SLACK_CHANNEL,
            link_names: true,
            text: "${GH_REPOSITORY} | RELEASED VERSION",
            blocks: message
        });
    }
    catch (error) {
        console.error(error);
    }
};
exports.sendNewReleaseMessage = sendNewReleaseMessage;
const buildSlackVersionMessage = (version, environment) => {
    const blocks = [];
    blocks.push({
        "type": "section",
        "text": {
            "type": "mrkdwn",
            "text": `*${env_1.RELEASE_PREFIX} | Release* version \`${version}\` has been released to \`${environment}\``
        }
    });
    blocks.push(buildDivider());
    blocks.push(buildFooter());
    return blocks;
};
const buildDivider = () => {
    return ({
        "type": "divider"
    });
};
const buildFooter = () => {
    return ({
        "type": "context",
        "elements": [
            {
                "type": "mrkdwn",
                "text": "This notification is autogenerated by gh action jira-ticket-actions."
            }
        ]
    });
};
